// ================================================================================
// CVC ITAQU√Å - PORTAL DE GEST√ÉO DA LOJA - CONFIGURA√á√ÉO CENTRAL v8.05
// ================================================================================
// ‚ö° CORRE√á√ÉO: Adicionados TIPOS_SERVICO e outras listas em falta

const CVC_CONFIG = {
    // ‚úÖ URL PRINCIPAL - ALTERAR APENAS AQUI quando reimplantar
    API_URL: 'https://script.google.com/macros/s/AKfycbx8vTz17267nRKCF7tp9Udq0tlvQxX5dTLur-dcGCQ7y_QGTi3QeVMg5xjNpVUCYYUYDA/exec',
    
    // üìä INFORMA√á√ïES DO SISTEMA
    VERSION: '8.05',
    SYSTEM_NAME: 'CVC Itaqu√° - Portal de Gest√£o da Loja',
    SYSTEM_FULL_NAME: 'CVC Itaqu√° - Portal de Gest√£o da Loja - Sistema de Gest√£o Integrado',
    SYSTEM_SHORT_NAME: 'Portal Itaqu√°',
    LAST_UPDATE: '2024-12-10',
    ENVIRONMENT: 'production',
    
    // üè™ CONFIGURA√á√ïES DA LOJA (FILIAL √öNICA)
    FILIAL_PADRAO: '6220',
    NOME_FILIAL: 'Itaquaquecetuba',
    FILIAL_NOME_COMPLETO: 'CVC Itaquaquecetuba',
    FILIAL_UNICA: true,
    
    // üë• VENDEDORES ATIVOS
    VENDEDORES: [
        'Alessandro',
        'Ana Paula', 
        'Adriana',
        'Adrielly',
        'Bia',
        'Concei√ß√£o',
        'Jhully'
    ],
    
    // üé´ TIPOS DE SERVI√áO - CORRE√á√ÉO DO ERRO "Cannot read properties of undefined"
    TIPOS_SERVICO: [
        'A√©reo',
        'A√©reo Facial',
        'A+H',
        'A+H+S',
        'Terrestre',
        'Mar√≠timo',
        'Seguro',
        'C√¢mbio',
        'Chip',
        'Transfer',
        'Passeio',
        'Ingresso',
        'Outros'
    ],
    
    // ‚úàÔ∏è COMPANHIAS A√âREAS
    COMPANHIAS_AEREAS: [
        'LATAM', 'AZUL', 'GOL', 'VOEPASS',
        '‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ',
        'CRUZEIRO MSC', 'CRUZEIRO COSTA', 'CRUZEIRO TEM√ÅTICO', 'CRUZEIRO NCL', 
        'CRUZEIRO DISNEY', 'CRUZEIROS OUTROS',
        '‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ',
        'Aerol√≠neas Argentinas', 'Aerom√©xico', 'Air Canada', 'Air China', 
        'Air Europa', 'Air France', 'Alitalia', 'American Airlines', 
        'British Airways', 'Copa Airlines', 'Delta', 'Emirates', 
        'Iberia', 'KLM', 'Lufthansa', 'Swiss', 'TAP', 'Turkish Airlines', 
        'United Airlines', 'OUTRAS'
    ],
    
    // üè¢ DEPARTAMENTOS - Para orbiuns.html
    DEPARTAMENTOS: [
        'Vendas',
        'P√≥s-Vendas',
        'Financeiro',
        'Operacional',
        'Marketing',
        'Recursos Humanos',
        'Tecnologia',
        'Ger√™ncia'
    ],
    
    // üìã STATUS ORBIUM - Para controle de status
    STATUS_ORBIUM: [
        'Pendente',
        'Em Andamento',
        'Aguardando Aprova√ß√£o',
        'Aprovado',
        'Rejeitado',
        'Conclu√≠do',
        'Cancelado'
    ],
    
    // üîÑ PRIORIDADES
    PRIORIDADES: [
        'Baixa',
        'M√©dia',
        'Alta',
        'Urgente',
        'Cr√≠tica'
    ],
    
    // üìÑ P√ÅGINAS DO SISTEMA
    PAGES: {
        DASHBOARD: {
            title: 'Dashboard Principal',
            subtitle: 'Vis√£o geral das opera√ß√µes - CVC Itaquaquecetuba',
            icon: 'fas fa-tachometer-alt',
            file: 'index.html'
        },
        ORCAMENTOS: {
            title: 'Padronizador de Or√ßamentos',
            subtitle: 'Gera√ß√£o inteligente de propostas comerciais',
            icon: 'fas fa-calculator',
            file: 'orcamentos.html'
        },
        VENDAS: {
            title: 'Informe de Vendas',
            subtitle: 'Cadastro e acompanhamento de vendas realizadas',
            icon: 'fas fa-chart-line',
            file: 'vendas.html'
        },
        EMBARQUES: {
            title: 'Controle de Embarques',
            subtitle: 'Gest√£o de check-ins e confer√™ncias de viagem',
            icon: 'fas fa-plane-departure',
            file: 'embarques.html'
        },
        ORBIUNS: {
            title: 'Controle de Orbiuns',
            subtitle: 'Gest√£o e acompanhamento de processos internos',
            icon: 'fas fa-clipboard-list',
            file: 'orbiuns.html'
        },
        ADMIN: {
            title: '√Årea do Gestor',
            subtitle: 'Gest√£o de usu√°rios e configura√ß√µes do sistema',
            icon: 'fas fa-crown',
            file: 'admin.html'
        }
    },
    
    // üé® CONFIGURA√á√ïES VISUAIS (CONFORME MANUAL DA MARCA CVC)
    VISUAL: {
        COLORS: {
            PRIMARY_YELLOW: '#FFE600',
            PRIMARY_BLUE: '#0A00B4',
            PRIMARY_WHITE: '#FFFFFF',
            SECONDARY_GREEN: '#00D4AA',
            DARK_BLUE: '#1B365D',
            LIGHT_BLUE: '#E8F0FE',
            LIGHT_YELLOW: '#FFF9CC',
            GRAY: '#6C757D',
            LIGHT_GRAY: '#f5f6fa'
        },
        FONTS: {
            PRIMARY: 'Nunito, sans-serif',
            WEIGHTS: {
                LIGHT: 300,
                REGULAR: 400,
                SEMIBOLD: 600,
                BOLD: 700,
                EXTRABOLD: 800,
                BLACK: 900
            }
        }
    },
    
    // üîß CONFIGURA√á√ïES T√âCNICAS
    DEBUG_MODE: false,
    CACHE_TIMEOUT: 300000,
    REQUEST_TIMEOUT: 30000,
    
    // üì± CONFIGURA√á√ïES DE INTERFACE
    UI: {
        ANIMATION_DURATION: 300,
        TOAST_DURATION: 4000,
        LOADING_DELAY: 1000,
        AUTO_REFRESH: 300000
    }
};

// ================================================================================
// üîß FUN√á√ïES UTILIT√ÅRIAS
// ================================================================================

/**
 * üåê Obter URL da API (compatibilidade)
 */
function getApiUrl() {
    return CVC_CONFIG.API_URL;
}

/**
 * üìä Obter configura√ß√µes completas
 */
function getConfig() {
    return {
        ...CVC_CONFIG,
        current_environment: detectEnvironment(),
        is_mobile: isMobile(),
        browser_info: getBrowserInfo()
    };
}

/**
 * üîç Detectar ambiente
 */
function detectEnvironment() {
    const hostname = window.location.hostname;
    
    if (hostname === 'localhost' || hostname === '127.0.0.1') {
        return 'development';
    } else if (hostname.includes('github.io')) {
        return 'github_pages';
    } else if (hostname.includes('netlify') || hostname.includes('vercel')) {
        return 'deploy_preview';
    }
    
    return 'production';
}

/**
 * üì± Detectar m√≥vel
 */
function isMobile() {
    return window.innerWidth <= 768 || /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
}

/**
 * üåê Info do navegador
 */
function getBrowserInfo() {
    const ua = navigator.userAgent;
    let browser = 'Unknown';
    
    if (ua.includes('Chrome')) browser = 'Chrome';
    else if (ua.includes('Firefox')) browser = 'Firefox';
    else if (ua.includes('Safari')) browser = 'Safari';
    else if (ua.includes('Edge')) browser = 'Edge';
    
    return {
        name: browser,
        userAgent: ua,
        language: navigator.language,
        platform: navigator.platform
    };
}

/**
 * üé® Aplicar tema
 */
function applyTheme() {
    const root = document.documentElement;
    const colors = CVC_CONFIG.VISUAL.COLORS;
    
    root.style.setProperty('--cvc-amarelo', colors.PRIMARY_YELLOW);
    root.style.setProperty('--cvc-azul', colors.PRIMARY_BLUE);
    root.style.setProperty('--cvc-branco', colors.PRIMARY_WHITE);
    root.style.setProperty('--cvc-verde', colors.SECONDARY_GREEN);
    
    debugLog('üé® Tema CVC aplicado dinamicamente', 'info');
}

/**
 * üìÑ Info da p√°gina atual
 */
function getCurrentPageInfo() {
    const currentFile = window.location.pathname.split('/').pop() || 'index.html';
    
    for (const [key, page] of Object.entries(CVC_CONFIG.PAGES)) {
        if (page.file === currentFile) {
            return {
                key: key,
                ...page,
                isActive: true
            };
        }
    }
    
    return {
        key: 'DASHBOARD',
        ...CVC_CONFIG.PAGES.DASHBOARD,
        isActive: true
    };
}

/**
 * üîß Sistema de debug
 */
function debugLog(message, level = 'log', data = null) {
    if (!CVC_CONFIG.DEBUG_MODE && level !== 'error') return;
    
    const timestamp = new Date().toLocaleTimeString();
    const prefix = `üè¢ [CVC-${timestamp}]`;
    
    const styles = {
        log: 'color: #0A00B4; font-weight: bold;',
        info: 'color: #17a2b8; font-weight: bold;',
        warn: 'color: #ffc107; font-weight: bold;',
        error: 'color: #dc3545; font-weight: bold;',
        success: 'color: #28a745; font-weight: bold;'
    };
    
    if (data) {
        console.groupCollapsed(`%c${prefix} ${message}`, styles[level] || '');
        console.log('Dados:', data);
        console.groupEnd();
    } else {
        switch(level) {
            case 'error':
                console.error(`${prefix} ‚ùå ${message}`);
                break;
            case 'warn':
                console.warn(`${prefix} ‚ö†Ô∏è ${message}`);
                break;
            case 'info':
                console.info(`${prefix} ‚ÑπÔ∏è ${message}`);
                break;
            case 'success':
                console.log(`%c${prefix} ‚úÖ ${message}`, styles.success);
                break;
            default:
                console.log(`${prefix} ${message}`);
        }
    }
}

/**
 * ‚úÖ Validar configura√ß√£o - CORRIGIDA
 */
function validateConfig() {
    const errors = [];
    
    if (!CVC_CONFIG.API_URL || !CVC_CONFIG.API_URL.includes('script.google.com')) {
        errors.push('URL da API inv√°lida ou n√£o configurada');
    }
    
    if (!CVC_CONFIG.VENDEDORES || CVC_CONFIG.VENDEDORES.length === 0) {
        errors.push('Lista de vendedores vazia');
    }
    
    // CORRE√á√ÉO: Verificar se TIPOS_SERVICO existe
    if (!CVC_CONFIG.TIPOS_SERVICO || CVC_CONFIG.TIPOS_SERVICO.length === 0) {
        errors.push('Lista TIPOS_SERVICO n√£o encontrada - isso causar√° erro no vendas.html');
    }
    
    // CORRE√á√ÉO: Verificar se DEPARTAMENTOS existe
    if (!CVC_CONFIG.DEPARTAMENTOS || CVC_CONFIG.DEPARTAMENTOS.length === 0) {
        errors.push('Lista DEPARTAMENTOS n√£o encontrada - isso causar√° erro no orbiuns.html');
    }
    
    if (!CVC_CONFIG.SYSTEM_NAME) {
        errors.push('Nome do sistema n√£o definido');
    }
    
    if (errors.length > 0) {
        console.error('‚ùå Erros na configura√ß√£o:', errors);
        return { valid: false, errors };
    }
    
    debugLog('‚úÖ Configura√ß√£o validada com sucesso', 'success');
    return { valid: true, errors: [] };
}

/**
 * üîÑ Atualizar t√≠tulo
 */
function updatePageTitle(customTitle = null) {
    const pageInfo = getCurrentPageInfo();
    const baseTitle = CVC_CONFIG.SYSTEM_NAME;
    
    if (customTitle) {
        document.title = `${baseTitle} - ${customTitle}`;
    } else {
        document.title = `${baseTitle} - ${pageInfo.title}`;
    }
    
    debugLog(`üìÑ T√≠tulo atualizado: ${document.title}`, 'info');
}

/**
 * üéØ Marcar navega√ß√£o ativa
 */
function setActiveNavigation() {
    const currentFile = window.location.pathname.split('/').pop() || 'index.html';
    
    document.querySelectorAll('.nav-link').forEach(link => {
        link.classList.remove('active');
    });
    
    document.querySelectorAll('.nav-link').forEach(link => {
        const href = link.getAttribute('href');
        if (href === currentFile || (currentFile === 'index.html' && href === '#')) {
            link.classList.add('active');
        }
    });
    
    debugLog(`üéØ Navega√ß√£o ativa definida para: ${currentFile}`, 'info');
}

// ================================================================================
// üöÄ INICIALIZA√á√ÉO AUTOM√ÅTICA
// ================================================================================

document.addEventListener('DOMContentLoaded', function() {
    const validation = validateConfig();
    const config = getConfig();
    
    debugLog(`üöÄ ${CVC_CONFIG.SYSTEM_NAME} v${CVC_CONFIG.VERSION} carregado`, 'success');
    debugLog(`üåç Ambiente detectado: ${config.current_environment}`, 'info');
    debugLog(`üì± Dispositivo m√≥vel: ${config.is_mobile ? 'Sim' : 'N√£o'}`, 'info');
    debugLog(`üåê Navegador: ${config.browser_info.name}`, 'info');
    debugLog(`üîó API URL: ${CVC_CONFIG.API_URL}`, 'info');
    debugLog(`üè™ Filial: ${CVC_CONFIG.FILIAL_PADRAO} - ${CVC_CONFIG.NOME_FILIAL}`, 'info');
    
    // CORRE√á√ÉO: Verificar listas essenciais
    debugLog(`üé´ TIPOS_SERVICO: ${CVC_CONFIG.TIPOS_SERVICO?.length || 0} itens`, 'info');
    debugLog(`üè¢ DEPARTAMENTOS: ${CVC_CONFIG.DEPARTAMENTOS?.length || 0} itens`, 'info');
    debugLog(`üë• VENDEDORES: ${CVC_CONFIG.VENDEDORES?.length || 0} itens`, 'info');
    
    if (!validation.valid) {
        console.error('‚ùå Configura√ß√£o inv√°lida:', validation.errors);
        alert('Erro na configura√ß√£o do sistema. Verifique o console.');
    } else {
        applyTheme();
        updatePageTitle();
        
        setTimeout(() => {
            setActiveNavigation();
        }, 100);
    }
});

// ================================================================================
// üé® COMPATIBILIDADE
// ================================================================================

window.CVC_CONFIG = CVC_CONFIG;
window.getApiUrl = getApiUrl;
window.getConfig = getConfig;
window.debugLog = debugLog;

// Aliases para compatibilidade
window.obterApiUrl = getApiUrl;
window.validarConfig = validateConfig;
window.atualizarTituloPagina = updatePageTitle;

// ================================================================================
// üìù LOGS INFORMATIVOS
// ================================================================================

console.log('%cüè¢ CVC ITAQU√Å - PORTAL DE GEST√ÉO DA LOJA', 'color: #0A00B4; font-size: 16px; font-weight: bold;');
console.log('%cüìä Config v8.05 carregado com TIPOS_SERVICO!', 'color: #FFE600; background: #0A00B4; padding: 4px 8px; font-weight: bold;');
console.log('üîß Para alterar a URL da API, edite apenas este arquivo (config.js)');
console.log('üéØ URL atual:', CVC_CONFIG.API_URL);
console.log('üè™ Filial:', CVC_CONFIG.FILIAL_PADRAO, '-', CVC_CONFIG.NOME_FILIAL);
console.log('üìã Sistema:', CVC_CONFIG.SYSTEM_NAME);
console.log('üé´ TIPOS_SERVICO adicionados:', CVC_CONFIG.TIPOS_SERVICO?.length || 0, 'itens');
console.log('üè¢ DEPARTAMENTOS adicionados:', CVC_CONFIG.DEPARTAMENTOS?.length || 0, 'itens');
